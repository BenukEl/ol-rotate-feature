{"version":3,"file":"bundle.es.js","sources":["../src/util.js","../src/rotate-feature-event.js","../src/rotate-feature-interaction.js","../src/index.js"],"sourcesContent":["/**\n * @param {boolean} condition\n * @param {string} message\n * @throws Error\n */\nexport function assert (condition, message = '') {\n  message = [ 'Assertion failed', message ].join(': ')\n\n  if (!condition) {\n    throw new Error(message)\n  }\n}\n\n/**\n * Checks if the value is an instance of the user-defined type.\n *\n * @param {*} value\n * @param {*} type\n * @throws Error\n */\nexport function assertInstanceOf (value, type) {\n  assert(value instanceof type, `Expected instanceof ${getValueType(type)} but got ${getValueType(value)}.`)\n}\n\n/**\n * Null function. Do nothing.\n */\nexport function noop () {}\n\n/**\n * @param {*} arg\n * @returns {*}\n */\nexport function identity (arg) {\n  return arg\n}\n\n/**\n * Returns the type of a value. If a constructor is passed, and a suitable\n * string cannot be found, 'unknown type name' will be returned.\n *\n * @param {*} value\n * @returns string\n */\nexport function getValueType (value) {\n  if (value instanceof Function) {\n    return value.name || 'unknown type name'\n  } else if (value instanceof Object) {\n    return value.constructor.name || Object.prototype.toString.call(value)\n  } else {\n    return value === null ? 'null' : typeof value\n  }\n}\n\n/**\n * @param {...*} args\n * @return {*}\n */\nexport function coalesce (...args) {\n  return args.filter(value => value != null).shift()\n}\n","/**\n * @enum {string}\n */\nexport const RotateFeatureEventType = {\n  /**\n   * Triggered upon feature rotate start.\n   * @event RotateFeatureEvent#rotatestart\n   */\n  START: 'rotatestart',\n  /**\n   * Triggered upon feature rotation.\n   * @event RotateFeatureEvent#rotating\n   */\n  ROTATING: 'rotating',\n  /**\n   * Triggered upon feature rotation end.\n   * @event RotateFeatureEvent#rotateend\n   */\n  END: 'rotateend'\n}\n\n/**\n * Events emitted by RotateFeatureInteraction instances are instances of this type.\n *\n * @class\n * @author Vladimir Vershinin\n */\nexport default class RotateFeatureEvent {\n  /**\n   * @param {string} type Type.\n   * @param {ol.Collection<ol.Feature>} features Rotated features.\n   * @param {number} angle Angle in radians.\n   * @param {ol.Coordinate} anchor Anchor position.\n   */\n  constructor (type, features, angle, anchor) {\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.propagationStopped_ = false\n\n    /**\n     * The event type.\n     * @type {string}\n     * @private\n     */\n    this.type_ = type\n\n    /**\n     * The features being rotated.\n     * @type {ol.Collection<ol.Feature>}\n     * @private\n     */\n    this.features_ = features\n    /**\n     * Current angle in radians.\n     * @type {number}\n     * @private\n     */\n    this.angle_ = angle\n    /**\n     * Current rotation anchor.\n     * @type {ol.Coordinate}\n     * @private\n     */\n    this.anchor_ = anchor\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get propagationStopped () {\n    return this.propagationStopped_\n  }\n\n  /**\n   * @type {RotateFeatureEventType}\n   */\n  get type () {\n    return this.type_\n  }\n\n  /**\n   * @type {ol.Collection<ol.Feature>}\n   */\n  get features () {\n    return this.features_\n  }\n\n  /**\n   * @type {number}\n   */\n  get angle () {\n    return this.angle_\n  }\n\n  /**\n   * @type {ol.Coordinate}\n   */\n  get anchor () {\n    return this.anchor_\n  }\n\n  /**\n   * Prevent event propagation.\n   */\n  preventDefault () {\n    this.propagationStopped_ = true\n  }\n\n  /**\n   * Stop event propagation.\n   */\n  stopPropagation () {\n    this.propagationStopped_ = true\n  }\n}\n","import PointerInteraction from 'ol/interaction/pointer'\nimport Collection from 'ol/collection'\nimport VectorLayer from 'ol/layer/vector'\nimport VectorSource from 'ol/source/vector'\nimport Feature from 'ol/feature'\nimport Point from 'ol/geom/point'\nimport Polygon from 'ol/geom/polygon'\nimport GeometryCollection from 'ol/geom/geometrycollection'\nimport Style from 'ol/style/style'\nimport RegularShape from 'ol/style/regularshape'\nimport Stroke from 'ol/style/stroke'\nimport Fill from 'ol/style/fill'\nimport Text from 'ol/style/text'\nimport extentHelper from 'ol/extent'\nimport { assert, assertInstanceOf, coalesce, identity } from './util'\nimport RotateFeatureEvent, { RotateFeatureEventType } from './rotate-feature-event'\n\nconst ANCHOR_KEY = 'anchor'\nconst ARROW_KEY = 'arrow'\n// const GHOST_KEY = 'ghost'\n\nconst ANGLE_PROP = 'angle'\nconst ANCHOR_PROP = 'anchor'\n\n/**\n * todo добавить опцию condition - для возможности переопределения клавиш\n *\n * Rotate interaction class.\n * Adds controls to rotate vector features.\n * Writes out total angle in radians (positive is counter-clockwise) to property for each feature.\n */\nexport default class RotateFeatureInteraction extends PointerInteraction {\n  /**\n   * @param {InteractionOptions} options\n   */\n  constructor (options = {}) {\n    super({\n      handleEvent: RotateFeatureInteraction.handleEvent,\n      handleDownEvent: handleDownEvent,\n      handleUpEvent: handleUpEvent,\n      handleDragEvent: handleDragEvent,\n      handleMoveEvent: handleMoveEvent\n    })\n\n    /**\n     * @type {ol.Collection<ol.Feature>}\n     * @private\n     */\n    this.features_ = undefined\n    if (options.features) {\n      if (Array.isArray(options.features)) {\n        this.features_ = new Collection(options.features)\n      } else if (options.features instanceof Collection) {\n        this.features_ = options.features\n      } else {\n        throw new Error('Features option should be an array or collection of features, got ' + (typeof options.features))\n      }\n    } else {\n      this.features_ = new Collection()\n    }\n\n    if (options.angle != null) {\n      this.setAngle(options.angle)\n    }\n\n    if (options.anchor != null) {\n      this.setAnchor(options.anchor)\n    }\n\n    /**\n     * @type {ol.layer.Vector}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      style: options.style || getDefaultStyle(),\n      source: new VectorSource({\n        features: new Collection()\n      })\n    })\n    /**\n     * @type {string}\n     * @private\n     */\n    this.previousCursor_ = undefined\n//        /**\n//         * Rotated feature.\n//         *\n//         * @type {ol.Feature}\n//         * @private\n//         */\n//        this.ghostFeature_ = undefined\n    /**\n     * @type {ol.Feature}\n     * @private\n     */\n    this.anchorFeature_ = undefined\n    /**\n     * @type {ol.Feature}\n     * @private\n     */\n    this.arrowFeature_ = undefined\n    /**\n     * @type {ol.Coordinate}\n     * @private\n     */\n    this.lastCoordinate_ = undefined\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.anchorMoving_ = false\n\n    this.features_.on('add', this.onFeatureAdd_, this)\n    this.features_.on('remove', this.onFeatureRemove_, this)\n\n    this.on('change:active', this.onChangeActive_, this)\n    this.on('change:' + ANGLE_PROP, this.onAngleChange_, this)\n    this.on('change:' + ANCHOR_PROP, this.onAnchorChange_, this)\n\n    this.updateInteractionFeatures_()\n  }\n\n  /**\n   * @type {ol.Collection<ol.Feature>}\n   */\n  get features () {\n    return this.features_\n  }\n\n  /**\n   * @type {number}\n   */\n  get angle () {\n    return this.getAngle()\n  }\n\n  /**\n   * @param {number} angle\n   */\n  set angle (angle) {\n    this.setAngle(angle)\n  }\n\n  /**\n   * @type {ol.Coordinate|undefined}\n   */\n  get anchor () {\n    return this.getAnchor()\n  }\n\n  /**\n   * @param {ol.Coordinate|undefined} anchor\n   */\n  set anchor (anchor) {\n    this.setAnchor(anchor)\n  }\n\n  /**\n   * @param {ol.MapBrowserEvent} evt Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {RotateFeatureInteraction}\n   * @public\n   */\n  static handleEvent (evt) {\n    // disable selection of inner features\n    const foundFeature = evt.map.forEachFeatureAtPixel(evt.pixel, identity)\n    if (\n      [ 'click', 'singleclick' ].includes(evt.type) &&\n      [ this.anchorFeature_, this.arrowFeature_ ].includes(foundFeature)\n    ) {\n      return false\n    }\n\n    return this::PointerInteraction.handleEvent(evt)\n  }\n\n  /**\n   * @param {ol.Map} map\n   */\n  setMap (map) {\n    this.overlay_.setMap(map)\n    super.setMap(map)\n\n    if (map) {\n      this.updateInteractionFeatures_()\n    } else {\n      this.reset_(true)\n    }\n  }\n\n  /**\n   * @private\n   */\n  onChangeActive_ () {\n    if (this.getActive()) {\n      this.updateInteractionFeatures_()\n    } else {\n      this.reset_(true)\n    }\n  }\n\n  /**\n   * Set current angle of interaction features.\n   *\n   * @param {number} angle\n   */\n  setAngle (angle) {\n    assert(!isNaN(parseFloat(angle)), 'Numeric value passed')\n\n    this.set(ANGLE_PROP, parseFloat(angle))\n  }\n\n  /**\n   * Returns current angle of interaction features.\n   *\n   * @return {number}\n   */\n  getAngle () {\n    return coalesce(this.get(ANGLE_PROP), 0)\n  }\n\n  /**\n   * Set current anchor position.\n   *\n   * @param {ol.Coordinate | undefined} anchor\n   */\n  setAnchor (anchor) {\n    assert(anchor == null || Array.isArray(anchor) && anchor.length === 2, 'Array of two elements passed')\n    this.set(ANCHOR_PROP, anchor != null ? anchor.map(parseFloat) : undefined)\n  }\n\n  /**\n   * Returns current anchor position.\n   *\n   * @return {ol.Coordinate | undefined}\n   */\n  getAnchor () {\n    return coalesce(this.get(ANCHOR_PROP), getFeaturesCentroid(this.features_))\n  }\n\n  /**\n   * Creates or updates all interaction helper features.\n   * @private\n   */\n  updateInteractionFeatures_ () {\n    if (!this.features_.getLength()) {\n      this.reset_()\n\n      return\n    }\n\n    this.createOrUpdateAnchorFeature_()\n    this.createOrUpdateArrowFeature_()\n  }\n\n  /**\n   * @param {boolean} [resetAngleAndAnchor]\n   * @private\n   */\n  reset_ (resetAngleAndAnchor = false) {\n    if (resetAngleAndAnchor) {\n      this.resetAngleAndAnchor_()\n    }\n\n    [ this.anchorFeature_, this.arrowFeature_ ].forEach(feature => {\n      if (feature) {\n        this.overlay_.getSource().removeFeature(feature)\n      }\n    })\n\n    this.anchorFeature_ = this.arrowFeature_ = this.lastCoordinate_ = undefined\n    this.anchorMoving_ = false\n  }\n\n  /**\n   * @private\n   */\n  resetAngleAndAnchor_ () {\n    this.resetAngle_()\n    this.resetAnchor_()\n  }\n\n  /**\n   * @private\n   */\n  resetAngle_ () {\n    this.set(ANGLE_PROP, 0, true)\n    this.arrowFeature_ && this.arrowFeature_.set(ANGLE_PROP, this.getAngle())\n    this.anchorFeature_ && this.anchorFeature_.set(ANGLE_PROP, this.getAngle())\n  }\n\n  /**\n   * @private\n   */\n  resetAnchor_ () {\n    this.set(ANCHOR_PROP, getFeaturesCentroid(this.features_), true)\n\n    if (this.getAnchor()) {\n      this.arrowFeature_ && this.arrowFeature_.getGeometry().setCoordinates(this.getAnchor())\n      this.anchorFeature_ && this.anchorFeature_.getGeometry().setCoordinates(this.getAnchor())\n    }\n  }\n\n  /**\n   * @private\n   */\n  createOrUpdateAnchorFeature_ () {\n    const angle = this.getAngle()\n    const anchor = this.getAnchor()\n\n    if (this.anchorFeature_) {\n      this.anchorFeature_.getGeometry().setCoordinates(anchor)\n    } else {\n      this.anchorFeature_ = new Feature({\n        geometry: new Point(anchor),\n        [ANCHOR_KEY]: true,\n        [ANGLE_PROP]: angle\n      })\n      this.overlay_.getSource().addFeature(this.anchorFeature_)\n    }\n  }\n\n//    /**\n//     * @private\n//     */\n//    createOrUpdateGhostFeature_() {\n//        if (this.ghostFeature_) {\n//            this.ghostFeature_.getGeometry().setGeometries(geometries)\n//        } else {\n//            this.ghostFeature_ = new ol.Feature({\n//                geometry: new ol.geom.GeometryCollection(geometries),\n//                [GHOST_KEY]: true\n//            })\n//            this.overlay_.addFeature(this.ghostFeature_)\n//        }\n//    }\n\n  /**\n   * @private\n   */\n  createOrUpdateArrowFeature_ () {\n    const angle = this.getAngle()\n    const anchor = this.getAnchor()\n\n    if (this.arrowFeature_) {\n      this.arrowFeature_.getGeometry().setCoordinates(anchor)\n    } else {\n      this.arrowFeature_ = new Feature({\n        geometry: new Point(anchor),\n        [ARROW_KEY]: true,\n        [ANGLE_PROP]: angle\n      })\n      this.overlay_.getSource().addFeature(this.arrowFeature_)\n    }\n  }\n\n  /**\n   * @param {ol.Feature} element\n   * @private\n   */\n  onFeatureAdd_ ({ element }) {\n    if (!this.getActive()) {\n      return\n    }\n\n    assertInstanceOf(element, Feature)\n\n    this.resetAngleAndAnchor_()\n    this.updateInteractionFeatures_()\n  }\n\n  /**\n   * @param {ol.Feature} element\n   * @private\n   */\n  onFeatureRemove_ ({ element }) {\n    if (!this.getActive()) {\n      return\n    }\n\n    assertInstanceOf(element, Feature)\n\n    this.resetAngleAndAnchor_()\n    this.updateInteractionFeatures_()\n  }\n\n  /**\n   * @private\n   */\n  onAngleChange_ ({ oldValue }) {\n    this.features_.forEach(feature => {\n      feature.getGeometry()\n        .rotate(\n          this.getAngle() - (oldValue || 0),\n          this.anchorFeature_.getGeometry().getCoordinates()\n        )\n    })\n    this.arrowFeature_ && this.arrowFeature_.set(ANGLE_PROP, this.getAngle())\n    this.anchorFeature_ && this.anchorFeature_.set(ANGLE_PROP, this.getAngle())\n  }\n\n  /**\n   * @private\n   */\n  onAnchorChange_ () {\n    const anchor = this.getAnchor()\n\n    if (anchor) {\n      this.anchorFeature_ && this.anchorFeature_.getGeometry().setCoordinates(anchor)\n      this.arrowFeature_ && this.arrowFeature_.getGeometry().setCoordinates(anchor)\n    }\n  }\n\n  /**\n   * @param {ol.Collection<ol.Feature>} features\n   * @private\n   */\n  dispatchRotateStartEvent_ (features) {\n    this.dispatchEvent(\n      new RotateFeatureEvent(\n        RotateFeatureEventType.START,\n        features,\n        this.getAngle(),\n        this.getAnchor()\n      )\n    )\n  }\n\n  /**\n   * @param {ol.Collection<ol.Feature>} features\n   * @private\n   */\n  dispatchRotatingEvent_ (features) {\n    this.dispatchEvent(\n      new RotateFeatureEvent(\n        RotateFeatureEventType.ROTATING,\n        features,\n        this.getAngle(),\n        this.getAnchor()\n      )\n    )\n  }\n\n  /**\n   * @param {ol.Collection<ol.Feature>} features\n   * @private\n   */\n  dispatchRotateEndEvent_ (features) {\n    this.dispatchEvent(\n      new RotateFeatureEvent(\n        RotateFeatureEventType.END,\n        features,\n        this.getAngle(),\n        this.getAnchor()\n      )\n    )\n  }\n}\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @return {boolean}\n * @this {RotateFeatureInteraction}\n * @private\n */\nfunction handleDownEvent (evt) {\n  const foundFeature = evt.map.forEachFeatureAtPixel(evt.pixel, identity)\n\n  // handle click & drag on features for rotation\n  if (\n    foundFeature && !this.lastCoordinate_ &&\n    (\n      this.features_.getArray().includes(foundFeature) ||\n      foundFeature === this.arrowFeature_\n    )\n  ) {\n    this.lastCoordinate_ = evt.coordinate\n\n    handleMoveEvent.call(this, evt)\n    this.dispatchRotateStartEvent_(this.features_)\n\n    return true\n  }\n  // handle click & drag on rotation anchor feature\n  else if (foundFeature && foundFeature === this.anchorFeature_) {\n    this.anchorMoving_ = true\n    handleMoveEvent.call(this, evt)\n\n    return true\n  }\n\n  return false\n}\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @return {boolean}\n * @this {RotateFeatureInteraction}\n * @private\n */\nfunction handleUpEvent (evt) {\n  // stop drag sequence of features\n  if (this.lastCoordinate_) {\n    this.lastCoordinate_ = undefined\n\n    handleMoveEvent.call(this, evt)\n    this.dispatchRotateEndEvent_(this.features_)\n\n    return true\n  }\n  // stop drag sequence of the anchors\n  else if (this.anchorMoving_) {\n    this.anchorMoving_ = false\n    handleMoveEvent.call(this, evt)\n\n    return true\n  }\n\n  return false\n}\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @return {boolean}\n * @this {RotateFeatureInteraction}\n * @private\n */\nfunction handleDragEvent (evt) {\n  const newCoordinate = evt.coordinate\n  const anchorCoordinate = this.anchorFeature_.getGeometry().getCoordinates()\n\n  // handle drag of features by angle\n  if (this.lastCoordinate_) {\n    // calculate vectors of last and current pointer positions\n    const lastVector = [\n      this.lastCoordinate_[ 0 ] - anchorCoordinate[ 0 ],\n      this.lastCoordinate_[ 1 ] - anchorCoordinate[ 1 ]\n    ]\n    const newVector = [\n      newCoordinate[ 0 ] - anchorCoordinate[ 0 ],\n      newCoordinate[ 1 ] - anchorCoordinate[ 1 ]\n    ]\n\n    // calculate angle between last and current vectors (positive angle counter-clockwise)\n    let angle = Math.atan2(\n      lastVector[ 0 ] * newVector[ 1 ] - newVector[ 0 ] * lastVector[ 1 ],\n      lastVector[ 0 ] * newVector[ 0 ] + lastVector[ 1 ] * newVector[ 1 ]\n    )\n\n    this.setAngle(this.getAngle() + angle)\n    this.dispatchRotatingEvent_(this.features_)\n\n    this.lastCoordinate_ = evt.coordinate\n  }\n  // handle drag of the anchor\n  else if (this.anchorMoving_) {\n    this.setAnchor(newCoordinate)\n  }\n}\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @return {boolean}\n * @this {RotateFeatureInteraction}\n * @private\n */\nfunction handleMoveEvent (evt) {\n  const elem = evt.map.getTargetElement()\n  const foundFeature = evt.map.forEachFeatureAtPixel(evt.pixel, identity)\n\n  const setCursor = (cursor, vendor = false) => {\n    if (vendor) {\n      elem.style.cursor = '-webkit-' + cursor\n      elem.style.cursor = '-moz-' + cursor\n    }\n\n    elem.style.cursor = cursor\n  }\n\n  if (this.lastCoordinate_) {\n    this.previousCursor_ = elem.style.cursor\n    setCursor('grabbing', true)\n  } else if (\n    foundFeature &&\n    (\n      this.features_.getArray().includes(foundFeature) ||\n      foundFeature === this.arrowFeature_\n    )\n  ) {\n    this.previousCursor_ = elem.style.cursor\n    setCursor('grab', true)\n  } else if (( foundFeature && foundFeature === this.anchorFeature_ ) || this.anchorMoving_) {\n    this.previousCursor_ = elem.style.cursor\n    setCursor('crosshair')\n  } else {\n    setCursor(this.previousCursor_ || '')\n    this.previousCursor_ = undefined\n  }\n}\n\n/**\n * @returns {StyleFunction}\n * @private\n */\nfunction getDefaultStyle () {\n  const white = [ 255, 255, 255, 0.8 ]\n  const blue = [ 0, 153, 255, 0.8 ]\n  const transparent = [ 255, 255, 255, 0.01 ]\n  const width = 2\n\n  const styles = {\n    [ ANCHOR_KEY ]: [\n      new Style({\n        image: new RegularShape({\n          fill: new Fill({\n            color: [ 0, 153, 255, 0.8 ]\n          }),\n          stroke: new Stroke({\n            color: blue,\n            width: 1\n          }),\n          radius: 4,\n          points: 6\n        }),\n        zIndex: Infinity\n      })\n    ],\n    [ ARROW_KEY ]: [\n      new Style({\n        fill: new Fill({\n          color: transparent\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width + 2\n        }),\n        text: new Text({\n          font: '12px sans-serif',\n          offsetX: 20,\n          offsetY: -20,\n          fill: new Fill({\n            color: 'blue'\n          }),\n          stroke: new Stroke({\n            color: white,\n            width: width + 1\n          })\n        }),\n        zIndex: Infinity\n      }),\n      new Style({\n        fill: new Fill({\n          color: transparent\n        }),\n        stroke: new Stroke({\n          color: blue,\n          width\n        }),\n        zIndex: Infinity\n      })\n    ]\n  }\n\n  return function (feature, resolution) {\n    let style\n    const angle = feature.get(ANGLE_PROP) || 0\n\n    switch (true) {\n      case feature.get(ANCHOR_KEY):\n        style = styles[ ANCHOR_KEY ]\n        style[ 0 ].getImage().setRotation(-angle)\n\n        return style\n      case feature.get(ARROW_KEY):\n        style = styles[ ARROW_KEY ]\n\n        const coordinates = feature.getGeometry().getCoordinates()\n        // generate arrow polygon\n        const geom = new Polygon([\n          [\n            [ coordinates[ 0 ], coordinates[ 1 ] - 6 * resolution ],\n            [ coordinates[ 0 ] + 8 * resolution, coordinates[ 1 ] - 12 * resolution ],\n            [ coordinates[ 0 ], coordinates[ 1 ] + 30 * resolution ],\n            [ coordinates[ 0 ] - 8 * resolution, coordinates[ 1 ] - 12 * resolution ],\n            [ coordinates[ 0 ], coordinates[ 1 ] - 6 * resolution ],\n          ]\n        ])\n\n        // and rotate it according to current angle\n        geom.rotate(angle, coordinates)\n        style[ 0 ].setGeometry(geom)\n        style[ 1 ].setGeometry(geom)\n        style[ 0 ].getText().setText(Math.round(-angle * 180 / Math.PI) + '°')\n\n        return style\n    }\n  }\n}\n\n/**\n * @param {ol.Collection<ol.Feature>|Array<ol.Feature>} features\n * @returns {ol.Extent | undefined}\n * @private\n */\nfunction getFeaturesExtent (features) {\n  features = features instanceof Collection ? features.getArray() : features\n  if (!features.length) return\n\n  return new GeometryCollection(features.map(feature => feature.getGeometry())).getExtent()\n}\n\n/**\n * @param {ol.Collection<ol.Feature> | Array<ol.Feature>} features\n * @return {ol.Coordinate | undefined}\n */\nfunction getFeaturesCentroid (features) {\n  features = features instanceof Collection ? features.getArray() : features\n  if (!features.length) return\n\n  return extentHelper.getCenter(getFeaturesExtent(features))\n}\n","/**\n * Rotate interaction for OpenLayers.\n * Allows vector feature rotation.\n *\n * @author Vladimir Vershinin <ghettovoice@gmail.com>\n * @licence MIT https://opensource.org/licenses/MIT\n * @copyright (c) 2016-2017, Vladimir Vershinin\n */\nimport RotateFeature from \"./rotate-feature-interaction\"\n\nexport default RotateFeature\n"],"names":["assert","condition","message","join","Error","assertInstanceOf","value","type","getValueType","identity","arg","Function","name","Object","constructor","prototype","toString","call","coalesce","args","filter","shift","RotateFeatureEventType","RotateFeatureEvent","features","angle","anchor","propagationStopped_","type_","features_","angle_","anchor_","ANCHOR_KEY","ARROW_KEY","ANGLE_PROP","ANCHOR_PROP","RotateFeatureInteraction","options","handleEvent","handleDownEvent","handleUpEvent","handleDragEvent","handleMoveEvent","undefined","Array","isArray","Collection","setAngle","setAnchor","overlay_","VectorLayer","style","getDefaultStyle","VectorSource","previousCursor_","anchorFeature_","arrowFeature_","lastCoordinate_","anchorMoving_","on","onFeatureAdd_","onFeatureRemove_","onChangeActive_","onAngleChange_","onAnchorChange_","updateInteractionFeatures_","map","setMap","reset_","getActive","isNaN","parseFloat","set","get","length","getFeaturesCentroid","getLength","createOrUpdateAnchorFeature_","createOrUpdateArrowFeature_","resetAngleAndAnchor","resetAngleAndAnchor_","forEach","feature","getSource","removeFeature","resetAngle_","resetAnchor_","getAngle","getAnchor","getGeometry","setCoordinates","Feature","Point","addFeature","element","oldValue","rotate","getCoordinates","dispatchEvent","START","ROTATING","END","evt","foundFeature","forEachFeatureAtPixel","pixel","includes","PointerInteraction","getArray","coordinate","dispatchRotateStartEvent_","dispatchRotateEndEvent_","newCoordinate","anchorCoordinate","lastVector","newVector","Math","atan2","dispatchRotatingEvent_","elem","getTargetElement","setCursor","cursor","vendor","white","blue","transparent","width","styles","Style","RegularShape","Fill","Stroke","Infinity","Text","resolution","getImage","setRotation","coordinates","geom","Polygon","setGeometry","getText","setText","round","PI","getFeaturesExtent","GeometryCollection","getExtent","extentHelper","getCenter"],"mappings":"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"}