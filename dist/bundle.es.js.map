{"version":3,"file":"bundle.es.js","sources":["../src/util.js","../src/event.js","../src/interaction.js","../src/index.js"],"sourcesContent":["/**\n * @param {boolean} condition\n * @param {string} message\n * @throws Error\n */\nexport function assert (condition, message = '') {\n  message = [ 'Assertion failed', message ].join(': ')\n\n  if (!condition) {\n    throw new Error(message)\n  }\n}\n\n/**\n * @param {*} arg\n * @returns {*}\n */\nexport function identity (arg) {\n  return arg\n}\n\n/**\n * @param {...*} args\n * @return {*}\n */\nexport function coalesce (...args) {\n  return args.filter(value => value != null).shift()\n}\n\nconst counters = {}\n/**\n * @param {string} [prefix]\n * @return {number}\n */\nexport function uniqId (prefix = '') {\n  const ns = prefix || 'default'\n  counters[ ns ] = counters[ ns ] == null ? 0 : counters[ ns ]\n\n  return String(prefix) + (++counters[ ns ])\n}\n\nexport function includes (arr, value) {\n  return arr.indexOf(value) !== -1\n}\n\nexport function isArray (val) {\n  return val::Object.prototype.toString() === '[object Array]'\n}\n","/**\n * @enum {string}\n */\nexport const RotateFeatureEventType = {\n  /**\n   * Triggered upon feature rotate start.\n   * @event RotateFeatureEvent#rotatestart\n   */\n  START: 'rotatestart',\n  /**\n   * Triggered upon feature rotation.\n   * @event RotateFeatureEvent#rotating\n   */\n  ROTATING: 'rotating',\n  /**\n   * Triggered upon feature rotation end.\n   * @event RotateFeatureEvent#rotateend\n   */\n  END: 'rotateend'\n}\n\n/**\n * Events emitted by RotateFeatureInteraction instances are instances of this type.\n *\n * @class\n * @author Vladimir Vershinin\n */\nexport default class RotateFeatureEvent {\n  /**\n   * @param {string} type Type.\n   * @param {ol.Collection<ol.Feature>} features Rotated features.\n   * @param {number} angle Angle in radians.\n   * @param {ol.Coordinate} anchor Anchor position.\n   */\n  constructor (type, features, angle, anchor) {\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.propagationStopped_ = false\n\n    /**\n     * The event type.\n     * @type {string}\n     * @private\n     */\n    this.type_ = type\n\n    /**\n     * The features being rotated.\n     * @type {ol.Collection<ol.Feature>}\n     * @private\n     */\n    this.features_ = features\n    /**\n     * Current angle in radians.\n     * @type {number}\n     * @private\n     */\n    this.angle_ = angle\n    /**\n     * Current rotation anchor.\n     * @type {ol.Coordinate}\n     * @private\n     */\n    this.anchor_ = anchor\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get propagationStopped () {\n    return this.propagationStopped_\n  }\n\n  /**\n   * @type {RotateFeatureEventType}\n   */\n  get type () {\n    return this.type_\n  }\n\n  /**\n   * @type {ol.Collection<ol.Feature>}\n   */\n  get features () {\n    return this.features_\n  }\n\n  /**\n   * @type {number}\n   */\n  get angle () {\n    return this.angle_\n  }\n\n  /**\n   * @type {ol.Coordinate}\n   */\n  get anchor () {\n    return this.anchor_\n  }\n\n  /**\n   * Prevent event propagation.\n   */\n  preventDefault () {\n    this.propagationStopped_ = true\n  }\n\n  /**\n   * Stop event propagation.\n   */\n  stopPropagation () {\n    this.propagationStopped_ = true\n  }\n}\n","/**\n * Rotate interaction class.\n * Adds controls to rotate vector features.\n * Writes out total angle in radians (positive is counter-clockwise) to property for each feature.\n */\nimport PointerInteraction from 'ol/interaction/pointer'\nimport Collection from 'ol/collection'\nimport VectorLayer from 'ol/layer/vector'\nimport VectorSource from 'ol/source/vector'\nimport Feature from 'ol/feature'\nimport Point from 'ol/geom/point'\nimport Polygon from 'ol/geom/polygon'\nimport GeometryCollection from 'ol/geom/geometrycollection'\nimport Style from 'ol/style/style'\nimport RegularShape from 'ol/style/regularshape'\nimport Stroke from 'ol/style/stroke'\nimport Fill from 'ol/style/fill'\nimport Text from 'ol/style/text'\nimport extentHelper from 'ol/extent'\nimport { assert, identity, includes, isArray } from './util'\nimport RotateFeatureEvent, { RotateFeatureEventType } from './event'\n\nconst ANCHOR_KEY = 'rotate-anchor'\nconst ARROW_KEY = 'rotate-arrow'\n\nconst ANGLE_PROP = 'angle'\nconst ANCHOR_PROP = 'anchor'\n\n/**\n * @todo todo добавить опцию condition - для возможности переопределения клавиш\n */\nexport default class RotateFeatureInteraction extends PointerInteraction {\n  /**\n   * @param {InteractionOptions} options\n   */\n  constructor (options = {}) {\n    super({\n      handleEvent: handleEvent,\n      handleDownEvent: handleDownEvent,\n      handleUpEvent: handleUpEvent,\n      handleDragEvent: handleDragEvent,\n      handleMoveEvent: handleMoveEvent\n    })\n    /**\n     * @type {string}\n     * @private\n     */\n    this.previousCursor_ = undefined\n    /**\n     * @type {ol.Feature}\n     * @private\n     */\n    this.anchorFeature_ = undefined\n    /**\n     * @type {ol.Feature}\n     * @private\n     */\n    this.arrowFeature_ = undefined\n    /**\n     * @type {ol.Coordinate}\n     * @private\n     */\n    this.lastCoordinate_ = undefined\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.anchorMoving_ = false\n    /**\n     * @type {ol.layer.Vector}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      style: options.style || getDefaultStyle(),\n      source: new VectorSource({\n        features: new Collection()\n      })\n    })\n    /**\n     * @type {ol.Collection<ol.Feature>}\n     * @private\n     */\n    this.features_ = undefined\n    if (options.features) {\n      if (isArray(options.features)) {\n        this.features_ = new Collection(options.features)\n      } else if (options.features instanceof Collection) {\n        this.features_ = options.features\n      } else {\n        throw new Error('Features option should be an array or collection of features, ' +\n                        'got ' + (typeof options.features))\n      }\n    } else {\n      this.features_ = new Collection()\n    }\n\n    this.setAnchor(options.anchor || getFeaturesCentroid(this.features_))\n    this.setAngle(options.angle || 0)\n\n    this.features_.on('add', ::this.onFeatureAdd_)\n    this.features_.on('remove', ::this.onFeatureRemove_)\n    this.on('change:' + ANGLE_PROP, ::this.onAngleChange_)\n    this.on('change:' + ANCHOR_PROP, ::this.onAnchorChange_)\n\n    this.createOrUpdateAnchorFeature_()\n    this.createOrUpdateArrowFeature_()\n  }\n\n  /**\n   * @type {ol.Collection<ol.Feature>}\n   */\n  get features () {\n    return this.features_\n  }\n\n  /**\n   * @type {number}\n   */\n  get angle () {\n    return this.getAngle()\n  }\n\n  /**\n   * @param {number} angle\n   */\n  set angle (angle) {\n    this.setAngle(angle)\n  }\n\n  /**\n   * @type {ol.Coordinate|undefined}\n   */\n  get anchor () {\n    return this.getAnchor()\n  }\n\n  /**\n   * @param {ol.Coordinate|undefined} anchor\n   */\n  set anchor (anchor) {\n    this.setAnchor(anchor)\n  }\n\n  /**\n   * @param {ol.Map} map\n   */\n  set map (map) {\n    this.setMap(map)\n  }\n\n  /**\n   * @type {ol.Map}\n   */\n  get map() {\n    return this.getMap()\n  }\n\n  /**\n   * @param {boolean} active\n   */\n  set active (active) {\n    this.setActive(active)\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get active () {\n    return this.getActive()\n  }\n\n  /**\n   * @param {ol.Map} map\n   */\n  setMap (map) {\n    this.overlay_.setMap(map)\n    super.setMap(map)\n  }\n\n  /**\n   * @param {boolean} active\n   */\n  setActive (active) {\n    if (this.overlay_) {\n      this.overlay_.setMap(active ? this.map : undefined)\n    }\n\n    super.setActive(active)\n  }\n\n  /**\n   * Set current angle of interaction features.\n   *\n   * @param {number} angle\n   */\n  setAngle (angle) {\n    assert(!isNaN(parseFloat(angle)), 'Numeric value passed')\n\n    this.set(ANGLE_PROP, parseFloat(angle))\n  }\n\n  /**\n   * Returns current angle of interaction features.\n   *\n   * @return {number}\n   */\n  getAngle () {\n    return this.get(ANGLE_PROP)\n  }\n\n  /**\n   * Set current anchor position.\n   *\n   * @param {ol.Coordinate | undefined} anchor\n   */\n  setAnchor (anchor) {\n    assert(anchor == null || isArray(anchor) && anchor.length === 2, 'Array of two elements passed')\n\n    this.set(ANCHOR_PROP, anchor != null ? anchor.map(parseFloat) : getFeaturesCentroid(this.features_))\n  }\n\n  /**\n   * Returns current anchor position.\n   *\n   * @return {ol.Coordinate | undefined}\n   */\n  getAnchor () {\n    return this.get(ANCHOR_PROP)\n  }\n\n  /**\n   * @private\n   */\n  createOrUpdateAnchorFeature_ () {\n    const angle = this.getAngle()\n    const anchor = this.getAnchor()\n\n    if (!anchor) return\n\n    if (this.anchorFeature_) {\n      this.anchorFeature_.getGeometry().setCoordinates(anchor)\n      this.anchorFeature_.set(ANGLE_PROP, angle)\n    } else {\n      this.anchorFeature_ = new Feature({\n        geometry: new Point(anchor),\n        [ ANGLE_PROP ]: angle,\n        [ ANCHOR_KEY ]: true\n      })\n      this.overlay_.getSource().addFeature(this.anchorFeature_)\n    }\n  }\n\n  /**\n   * @private\n   */\n  createOrUpdateArrowFeature_ () {\n    const angle = this.getAngle()\n    const anchor = this.getAnchor()\n\n    if (!anchor) return\n\n    if (this.arrowFeature_) {\n      this.arrowFeature_.getGeometry().setCoordinates(anchor)\n      this.arrowFeature_.set(ANGLE_PROP, angle)\n    } else {\n      this.arrowFeature_ = new Feature({\n        geometry: new Point(anchor),\n        [ ANGLE_PROP ]: angle,\n        [ ARROW_KEY ]: true\n      })\n      this.overlay_.getSource().addFeature(this.arrowFeature_)\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetAngleAndAnchor_() {\n    this.resetAngle_();\n    this.resetAnchor_();\n  }\n\n  /**\n   * @private\n   */\n  resetAngle_() {\n    this.set(ANGLE_PROP, 0, true);\n    this.arrowFeature_ && this.arrowFeature_.set(ANGLE_PROP, this.getAngle());\n    this.anchorFeature_ && this.anchorFeature_.set(ANGLE_PROP, this.getAngle());\n  }\n\n  /**\n   * @private\n   */\n  resetAnchor_() {\n    this.set(ANCHOR_PROP, getFeaturesCentroid(this.features_), true);\n\n    if (this.getAnchor()) {\n      this.arrowFeature_ && this.arrowFeature_.getGeometry().setCoordinates(this.getAnchor());\n      this.anchorFeature_ && this.anchorFeature_.getGeometry().setCoordinates(this.getAnchor());\n    }\n  }\n\n  /**\n   * @private\n   */\n  onFeatureAdd_ () {\n    this.resetAngleAndAnchor_()\n    this.createOrUpdateAnchorFeature_()\n    this.createOrUpdateArrowFeature_()\n  }\n\n  /**\n   * @private\n   */\n  onFeatureRemove_ () {\n    this.resetAngleAndAnchor_()\n\n    if (this.features_.getLength()) {\n      this.createOrUpdateAnchorFeature_()\n      this.createOrUpdateArrowFeature_()\n    } else {\n      this.overlay_.getSource().clear()\n      this.anchorFeature_ = this.arrowFeature_ = undefined\n    }\n  }\n\n  /**\n   * @private\n   */\n  onAngleChange_({ oldValue }) {\n    this.features_.forEach(feature => feature.getGeometry().rotate(this.getAngle() - oldValue, this.getAnchor()))\n    this.arrowFeature_ && this.arrowFeature_.set(ANGLE_PROP, this.getAngle())\n    this.anchorFeature_ && this.anchorFeature_.set(ANGLE_PROP, this.getAngle())\n  }\n\n  /**\n   * @private\n   */\n  onAnchorChange_() {\n    const anchor = this.getAnchor()\n\n    if (anchor) {\n      this.anchorFeature_ && this.anchorFeature_.getGeometry().setCoordinates(anchor)\n      this.arrowFeature_ && this.arrowFeature_.getGeometry().setCoordinates(anchor)\n    }\n  }\n\n  /**\n   * @param {ol.Collection<ol.Feature>} features\n   * @private\n   */\n  dispatchRotateStartEvent_ (features) {\n    this.dispatchEvent(\n      new RotateFeatureEvent(\n        RotateFeatureEventType.START,\n        features,\n        this.getAngle(),\n        this.getAnchor()\n      )\n    )\n  }\n\n  /**\n   * @param {ol.Collection<ol.Feature>} features\n   * @private\n   */\n  dispatchRotatingEvent_ (features) {\n    this.dispatchEvent(\n      new RotateFeatureEvent(\n        RotateFeatureEventType.ROTATING,\n        features,\n        this.getAngle(),\n        this.getAnchor()\n      )\n    )\n  }\n\n  /**\n   * @param {ol.Collection<ol.Feature>} features\n   * @private\n   */\n  dispatchRotateEndEvent_ (features) {\n    this.dispatchEvent(\n      new RotateFeatureEvent(\n        RotateFeatureEventType.END,\n        features,\n        this.getAngle(),\n        this.getAnchor()\n      )\n    )\n  }\n}\n\n/**\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {RotateFeatureInteraction}\n * @private\n */\nfunction handleEvent (evt) {\n  // disable selection of inner features\n  const foundFeature = evt.map.forEachFeatureAtPixel(evt.pixel, identity)\n  if (\n    includes([ 'click', 'singleclick', 'dblclick' ], evt.type) &&\n    includes([ this.anchorFeature_, this.arrowFeature_ ], foundFeature)\n  ) {\n    return false\n  }\n\n  return this::PointerInteraction.handleEvent(evt)\n}\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @return {boolean}\n * @this {RotateFeatureInteraction}\n * @private\n */\nfunction handleDownEvent (evt) {\n  const foundFeature = evt.map.forEachFeatureAtPixel(evt.pixel, identity)\n\n  // handle click & drag on features for rotation\n  if (\n    foundFeature && !this.lastCoordinate_ &&\n    (\n      includes(this.features_.getArray(), foundFeature) ||\n      foundFeature === this.arrowFeature_\n    )\n  ) {\n    this.lastCoordinate_ = evt.coordinate\n\n    this::handleMoveEvent(evt)\n    this.dispatchRotateStartEvent_(this.features_)\n\n    return true\n  }\n  // handle click & drag on rotation anchor feature\n  else if (foundFeature && foundFeature === this.anchorFeature_) {\n    this.anchorMoving_ = true\n    this::handleMoveEvent(evt)\n\n    return true\n  }\n\n  return false\n}\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @return {boolean}\n * @this {RotateFeatureInteraction}\n * @private\n */\nfunction handleUpEvent (evt) {\n  // stop drag sequence of features\n  if (this.lastCoordinate_) {\n    this.lastCoordinate_ = undefined\n\n    this::handleMoveEvent(evt)\n    this.dispatchRotateEndEvent_(this.features_)\n\n    return true\n  }\n  // stop drag sequence of the anchors\n  else if (this.anchorMoving_) {\n    this.anchorMoving_ = false\n    this::handleMoveEvent(evt)\n\n    return true\n  }\n\n  return false\n}\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @return {boolean}\n * @this {RotateFeatureInteraction}\n * @private\n */\nfunction handleDragEvent ({ coordinate }) {\n  const anchorCoordinate = this.anchorFeature_.getGeometry().getCoordinates()\n\n  // handle drag of features by angle\n  if (this.lastCoordinate_) {\n    // calculate vectors of last and current pointer positions\n    const lastVector = [\n      this.lastCoordinate_[ 0 ] - anchorCoordinate[ 0 ],\n      this.lastCoordinate_[ 1 ] - anchorCoordinate[ 1 ]\n    ]\n    const newVector = [\n      coordinate[ 0 ] - anchorCoordinate[ 0 ],\n      coordinate[ 1 ] - anchorCoordinate[ 1 ]\n    ]\n\n    // calculate angle between last and current vectors (positive angle counter-clockwise)\n    let angle = Math.atan2(\n      lastVector[ 0 ] * newVector[ 1 ] - newVector[ 0 ] * lastVector[ 1 ],\n      lastVector[ 0 ] * newVector[ 0 ] + lastVector[ 1 ] * newVector[ 1 ]\n    )\n\n    this.setAngle(this.getAngle() + angle)\n    this.dispatchRotatingEvent_(this.features_)\n\n    this.lastCoordinate_ = coordinate\n  }\n  // handle drag of the anchor\n  else if (this.anchorMoving_) {\n    this.setAnchor(coordinate)\n  }\n}\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @return {boolean}\n * @this {RotateFeatureInteraction}\n * @private\n */\nfunction handleMoveEvent ({ map, pixel }) {\n  const elem = map.getTargetElement()\n  const foundFeature = map.forEachFeatureAtPixel(pixel, identity)\n\n  const setCursor = (cursor, vendor = false) => {\n    if (vendor) {\n      elem.style.cursor = '-webkit-' + cursor\n      elem.style.cursor = '-moz-' + cursor\n    }\n\n    elem.style.cursor = cursor\n  }\n\n  if (this.lastCoordinate_) {\n    this.previousCursor_ = elem.style.cursor\n    setCursor('grabbing', true)\n  } else if (\n    foundFeature &&\n    (\n      includes(this.features_.getArray(), foundFeature) ||\n      foundFeature === this.arrowFeature_\n    )\n  ) {\n    this.previousCursor_ = elem.style.cursor\n    setCursor('grab', true)\n  } else if (( foundFeature && foundFeature === this.anchorFeature_ ) || this.anchorMoving_) {\n    this.previousCursor_ = elem.style.cursor\n    setCursor('crosshair')\n  } else {\n    setCursor(this.previousCursor_ || '')\n    this.previousCursor_ = undefined\n  }\n}\n\n/**\n * @returns {StyleFunction}\n * @private\n */\nfunction getDefaultStyle () {\n  const white = [ 255, 255, 255, 0.8 ]\n  const blue = [ 0, 153, 255, 0.8 ]\n  const transparent = [ 255, 255, 255, 0.01 ]\n  const width = 2\n\n  const styles = {\n    [ ANCHOR_KEY ]: [\n      new Style({\n        image: new RegularShape({\n          fill: new Fill({\n            color: [ 0, 153, 255, 0.8 ]\n          }),\n          stroke: new Stroke({\n            color: blue,\n            width: 1\n          }),\n          radius: 4,\n          points: 6\n        }),\n        zIndex: Infinity\n      })\n    ],\n    [ ARROW_KEY ]: [\n      new Style({\n        fill: new Fill({\n          color: transparent\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width + 2\n        }),\n        text: new Text({\n          font: '12px sans-serif',\n          offsetX: 20,\n          offsetY: -20,\n          fill: new Fill({\n            color: 'blue'\n          }),\n          stroke: new Stroke({\n            color: white,\n            width: width + 1\n          })\n        }),\n        zIndex: Infinity\n      }),\n      new Style({\n        fill: new Fill({\n          color: transparent\n        }),\n        stroke: new Stroke({\n          color: blue,\n          width\n        }),\n        zIndex: Infinity\n      })\n    ]\n  }\n\n  return function (feature, resolution) {\n    let style\n    const angle = feature.get(ANGLE_PROP) || 0\n\n    switch (true) {\n      case feature.get(ANCHOR_KEY):\n        style = styles[ ANCHOR_KEY ]\n        style[ 0 ].getImage().setRotation(-angle)\n\n        return style\n      case feature.get(ARROW_KEY):\n        style = styles[ ARROW_KEY ]\n\n        const coordinates = feature.getGeometry().getCoordinates()\n        // generate arrow polygon\n        const geom = new Polygon([\n          [\n            [ coordinates[ 0 ], coordinates[ 1 ] - 6 * resolution ],\n            [ coordinates[ 0 ] + 8 * resolution, coordinates[ 1 ] - 12 * resolution ],\n            [ coordinates[ 0 ], coordinates[ 1 ] + 30 * resolution ],\n            [ coordinates[ 0 ] - 8 * resolution, coordinates[ 1 ] - 12 * resolution ],\n            [ coordinates[ 0 ], coordinates[ 1 ] - 6 * resolution ],\n          ]\n        ])\n\n        // and rotate it according to current angle\n        geom.rotate(angle, coordinates)\n        style[ 0 ].setGeometry(geom)\n        style[ 1 ].setGeometry(geom)\n        style[ 0 ].getText().setText(Math.round(-angle * 180 / Math.PI) + '°')\n\n        return style\n    }\n  }\n}\n\n/**\n * @param {ol.Collection<ol.Feature>|Array<ol.Feature>} features\n * @returns {ol.Extent | undefined}\n * @private\n */\nfunction getFeaturesExtent (features) {\n  features = features instanceof Collection ? features.getArray() : features\n  if (!features.length) return\n\n  return new GeometryCollection(features.map(feature => feature.getGeometry())).getExtent()\n}\n\n/**\n * @param {ol.Collection<ol.Feature> | Array<ol.Feature>} features\n * @return {ol.Coordinate | undefined}\n */\nfunction getFeaturesCentroid (features) {\n  features = features instanceof Collection ? features.getArray() : features\n  if (!features.length) return\n\n  return extentHelper.getCenter(getFeaturesExtent(features))\n}\n","/**\n * Rotate interaction for OpenLayers.\n * Allows vector feature rotation.\n *\n * @author Vladimir Vershinin <ghettovoice@gmail.com>\n * @licence MIT https://opensource.org/licenses/MIT\n * @copyright (c) 2016-2017, Vladimir Vershinin\n */\nimport RotateFeatureInteraction from \"./interaction\"\n\n// for backward compatibility\nif (typeof window !== 'undefined' && window.ol) {\n  window.ol.interaction.RotateFeature = RotateFeatureInteraction\n}\n\nexport default RotateFeatureInteraction\n"],"names":["assert","condition","message","join","Error","identity","arg","includes","arr","value","indexOf","isArray","val","Object","prototype","toString","RotateFeatureEventType","RotateFeatureEvent","type","features","angle","anchor","propagationStopped_","type_","features_","angle_","anchor_","ANCHOR_KEY","ARROW_KEY","ANGLE_PROP","ANCHOR_PROP","RotateFeatureInteraction","options","handleEvent","handleDownEvent","handleUpEvent","handleDragEvent","handleMoveEvent","previousCursor_","undefined","anchorFeature_","arrowFeature_","lastCoordinate_","anchorMoving_","overlay_","VectorLayer","style","getDefaultStyle","VectorSource","Collection","setAnchor","getFeaturesCentroid","setAngle","on","onFeatureAdd_","onFeatureRemove_","onAngleChange_","onAnchorChange_","createOrUpdateAnchorFeature_","createOrUpdateArrowFeature_","map","setMap","active","isNaN","parseFloat","set","get","length","getAngle","getAnchor","getGeometry","setCoordinates","Feature","Point","getSource","addFeature","resetAngle_","resetAnchor_","resetAngleAndAnchor_","getLength","clear","oldValue","forEach","feature","rotate","dispatchEvent","START","ROTATING","END","getMap","setActive","getActive","PointerInteraction","evt","foundFeature","forEachFeatureAtPixel","pixel","getArray","coordinate","dispatchRotateStartEvent_","dispatchRotateEndEvent_","anchorCoordinate","getCoordinates","lastVector","newVector","Math","atan2","dispatchRotatingEvent_","elem","getTargetElement","setCursor","cursor","vendor","white","blue","transparent","width","styles","Style","RegularShape","Fill","Stroke","Infinity","Text","resolution","getImage","setRotation","coordinates","geom","Polygon","setGeometry","getText","setText","round","PI","getFeaturesExtent","GeometryCollection","getExtent","extentHelper","getCenter","window","ol","interaction","RotateFeature"],"mappings":"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"}